@page "/admin/users/{UserId}"
@using Newtonsoft.Json
@using Cotacol.Website.Models.CotacolApi

@if (UserProfile.IsAdmin)
{
    <MudGrid>
    <MudItem xs="12">
        <UserAdminLinks UserId="@UserId"/>
    </MudItem>
    @if (userDetail != null)
    {
        <MudItem xs="6" md="4">
            <MudGrid>
                <MudItem xs="12">
                    <AeroSubtitle>Trigger full sync</AeroSubtitle>
                </MudItem>
                <MudItem xs="12">
                    <AeroToggle Label="Sync ALL activities" @bind-Value="@fullSync"></AeroToggle>
                    <MudIconButton Icon="@Icons.Material.Filled.Refresh" OnClick="@(async () => await PerformUserSyncAsync())"></MudIconButton>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="6" md="4">
            <MudGrid>
                <MudItem xs="12">
                    <AeroSubtitle>Trigger activity sync</AeroSubtitle>
                </MudItem>
                <MudItem xs="10">
                    <MudTextField T="string" @bind-Value="@activityId" Label="Activity ID" HelperText="Enter the activity ID you want to sync"></MudTextField>
                </MudItem>
                <MudItem xs="2">
                    <MudIconButton Icon="@Icons.Material.Filled.Refresh" OnClick="@(async () => await PerformActivitySyncAsync())"></MudIconButton>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="0" md="4"></MudItem>
        <MudItem xs="12">
            <MudDivider></MudDivider>
        </MudItem>
        <MudItem xs="6" md="4">
            <AeroButton StartIcon="@Icons.Material.Filled.Refresh" OnClick="@(async () => await RefreshDataAsync())">Refresh all</AeroButton>
        </MudItem>
        <MudItem xs="6" md="4">
            <div style="width:100%; text-align: right">
                <AeroButton StartIcon="@Icons.Material.Filled.PersonRemove" OnClick="@(async () => await DeleteUserAsync())" Mode="AeroButton.ButtonMode.Warning">Delete user</AeroButton>
            </div>
        </MudItem>
        <MudItem xs="0" md="4"></MudItem>
        <MudItem xs="12">
            <MudDivider></MudDivider>
        </MudItem>
        <MudItem xs="12" md="3">
            <AeroSubtitle>Sync status</AeroSubtitle>
            @if (syncStatus != null)
            {
                <MudList T="string">
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Sync"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Synchronization Status</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@syncStatus.Status</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.ToggleOn"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Active sync</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@syncStatus.SyncActive</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Numbers"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Activity count</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@syncStatus.Processed.Number() / @syncStatus.Total.Number()</MudText>
                        </ChildContent>
                    </MudListItem>
                    @if (userDetail?.SyncStatus != null)
                    {
                        <MudListItem>
                            <AvatarContent>
                                <MudIcon Icon="@Icons.Material.Filled.Check"/>
                            </AvatarContent>
                            <ChildContent>
                                <MudText Typo="Typo.body1">
                                    <b>Full sync succeeded</b>
                                </MudText>
                                <MudText Typo="Typo.body2">@userDetail.SyncStatus.Succeeded</MudText>
                            </ChildContent>
                        </MudListItem>
                        <MudListItem>
                            <AvatarContent>
                                <MudIcon Icon="@Icons.Material.Filled.SwitchLeft"/>
                            </AvatarContent>
                            <ChildContent>
                                <MudText Typo="Typo.body1">
                                    <b>Full sync trigger</b>
                                </MudText>
                                <MudText Typo="Typo.body2">@userDetail.SyncStatus.Trigger</MudText>
                            </ChildContent>
                        </MudListItem>
                        <MudListItem>
                            <AvatarContent>
                                <MudIcon Icon="@Icons.Material.Filled.Timelapse"/>
                            </AvatarContent>
                            <ChildContent>
                                <MudText Typo="Typo.body1">
                                    <b>Full sync time</b>
                                </MudText>
                                <MudText Typo="Typo.body2">@userDetail.SyncStatus.SyncTime.DateTime()</MudText>
                            </ChildContent>
                        </MudListItem>
                        <MudListItem>
                            <AvatarContent>
                                <MudIcon Icon="@Icons.Material.Filled.Error"/>
                            </AvatarContent>
                            <ChildContent>
                                <MudText Typo="Typo.body1">
                                    <b>Full sync error code</b>
                                </MudText>
                                <MudText Typo="Typo.body2">@userDetail.SyncStatus.ErrorCode</MudText>
                            </ChildContent>
                        </MudListItem>
                        <MudListItem>
                            <AvatarContent>
                                <MudIcon Icon="@Icons.Material.Filled.SyncProblem"/>
                            </AvatarContent>
                            <ChildContent>
                                <MudText Typo="Typo.body1">
                                    <b>Full sync error</b>
                                </MudText>
                                <MudText Typo="Typo.body2">@userDetail.SyncStatus.ErrorDescription</MudText>
                            </ChildContent>
                        </MudListItem>
                    }
                </MudList>
            }
            else
            {
                <AeroLoader WaitingMessage="Retrieving sync status"/>
            }
        </MudItem>
        <MudItem xs="12" md="3">
            <AeroSubtitle>Audit history</AeroSubtitle>
            @if (userDetail.Audit != null)
            {
                <MudList T="string">
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Web"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Web site login</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.Audit.WebLogin.DateTime()</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.IosShare"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>iOS login</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.Audit.IOSLogin.DateTime()</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.PhoneAndroid"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Android login</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.Audit.AndroidLogin.DateTime()</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Sync"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Last full sync</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.Audit.FullSync.DateTime()</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.PedalBike"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Last activity pushed</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.Audit.ActivityWebhookSync.DateTime()</MudText>
                        </ChildContent>
                    </MudListItem>
                </MudList>
            }
            else
            {
                <AeroLoader WaitingMessage="Retrieving audit info"/>
            }
        </MudItem>
        <MudItem xs="12" md="3">
            <AeroSubtitle>Strava token</AeroSubtitle>
            @if (userDetail.UserTokens != null)
            {
                <MudList T="string">
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Person"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>User ID</b>
                            </MudText>
                            <MudText Typo="Typo.body2">
                                <MudLink Color="Color.Secondary" Href="@($"https://www.strava.com/athletes/{userDetail.UserTokens.UserId}")" Target="_blank">@userDetail.UserTokens.UserId</MudLink>
                            </MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.HourglassBottom"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Is Expired</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.UserTokens.IsExpired</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Timeline"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Token expiration</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.UserTokens.Expiration</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Refresh"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Last refresh</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@userDetail.UserTokens.LastRefreshTime</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Security"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Scope</b>
                            </MudText>
                            <MudText Typo="Typo.body2">@(userDetail.UserTokens.Scope ?? "not set")</MudText>
                        </ChildContent>
                    </MudListItem>
                    <MudListItem>
                        <AvatarContent>
                            <MudIcon Icon="@Icons.Material.Filled.Key"/>
                        </AvatarContent>
                        <ChildContent>
                            <MudText Typo="Typo.body1">
                                <b>Key vault</b>
                            </MudText>
                            <MudText Typo="Typo.body2">
                                <MudLink Color="Color.Secondary" Target="_blank" Href="@($"https://portal.azure.com/#@@marchitec.onmicrosoft.com/asset/Microsoft_Azure_KeyVault/Secret/https://cotacol-hunting.vault.azure.net/secrets/strava-{UserId}-bearer/")">Portal</MudLink>
                            </MudText>
                        </ChildContent>
                    </MudListItem>
                </MudList>
            }
            else
            {
                <AeroLoader WaitingMessage="Retrieving strava token info"/>
            }
        </MudItem>
        <MudItem xs="12" md="6">
            <AeroSubtitle>User state</AeroSubtitle>
            <MudTextField T="string" Label="User state" Variant="Variant.Outlined" Lines="20" Text="@userStateJson"></MudTextField>
        </MudItem>
    }
    </MudGrid>
}
else
{
    <MudText Typo="Typo.subtitle1" Color="Color.Warning">Only accessible for admin users. Please contact someone of the crew if you believe you should be an admin.</MudText>
}

<MudDialog @bind-IsVisible="@confirmationDialogOpen">
    <TitleContent>
        <MudText Typo="Typo.subtitle1">Deleting the user?</MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1" Color="Color.Warning">This action is irriversable, Sure you want to remove the user?</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(async () => await CotacolUserClient.RemoveUserAsync(UserId))">Delete user</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(e => { confirmationDialogOpen = false; })">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Parameter] public string UserId { get; set; }

    [CascadingParameter] public MainLayout Layout { get; set; } = null!;

    private bool confirmationDialogOpen = false;
    private bool fullSync;
    private string activityId;
    private UserStateDetail userDetail;
    private string userStateJson;
    private SyncStatus syncStatus;
    private UserProfile userProfile;
    private AsyncWorkflowResult fullSyncResponse;
    private AsyncWorkflowResult activitySyncResponse;
    private string persistenceService = "entity";

    protected override async Task OnInitializedAsync()
    {
        await RefreshDataAsync();
    }


    private async Task RefreshDataAsync()
    {
        if (UserProfile.IsAdmin && !string.IsNullOrEmpty(UserId))
        {
            userDetail = await CotacolClient.GetUserAdminInfoAsync(UserId);
            userProfile = await CotacolUserClient.GetProfileAsync(UserId);
            Layout.Title = userProfile.FullName;
            syncStatus = await CotacolUserClient.GetSyncStatus(UserId);
            if (userProfile != null)
            {
                userStateJson = JsonConvert.SerializeObject(userProfile, Formatting.Indented);
            }
        }
    }

    private async Task DeleteUserAsync()
    {
        confirmationDialogOpen = !confirmationDialogOpen;
    }


    private async Task PerformActivitySyncAsync()
    {
        activitySyncResponse = await CotacolUserClient.SynchronizeActivityAsync(UserId, activityId);
    }

    private async Task PerformUserSyncAsync()
    {
        if (!string.IsNullOrEmpty(UserId))
        {
            fullSyncResponse = await CotacolUserClient.SynchronizeAsync(UserId, fullSync);
        }
    }

}