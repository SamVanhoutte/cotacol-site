@using Cotacol.Website.Models.CotacolApi
@inject IHttpContextAccessor HttpContextManager

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.subtitle1">#@Cotacol.Id @Cotacol.Name</MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1" Color="Color.Warning">Verify details before updating the segment on the backend
        </MudText>
        <MudSelect T="string" Label="Confidence" @bind-Value="@confidence">
            <MudSelectItem Value='"official"'>Official</MudSelectItem>
            <MudSelectItem Value='"goodenough"'>Good enough</MudSelectItem>
        </MudSelect>
        <MudTextField T="string" Label="Remark" @bind-Value="@remark"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(async () => await UpdateSegmentAsync())">
            OK
        </MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="Cancel">No Thanks</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public ClimbDetail Cotacol { get; set; }

    [Parameter] public string NewSegmentId { get; set; }

    private string remark;
    private string confidence;

    void Cancel() => MudDialog.Cancel();

    private async Task UpdateSegmentAsync()
    {
        var userId = HttpContextManager.HttpContext.User.GetUserId();
        var stravaSegment = Cotacol.Segments.First(s => s.Segmentid.Equals(NewSegmentId));
        var updateRequest = new UpdateSegmentRequest
        {
            Remark = remark, SegmentConfidence = confidence, UserId = userId,
            Distance = (int)stravaSegment.Distance, Name = stravaSegment.Name, Polyline = stravaSegment.Polyline,
            StravaSegmentId = stravaSegment.Segmentid
        };
        Console.WriteLine($"Will update {NewSegmentId}");
        var status = await CotacolClient.UpdateSegmentAsync(Cotacol.Id, updateRequest);
        Console.WriteLine($"Segment updated with Status code {status}");
        stravaSegment.Confidence = confidence;
        StateHasChanged();
        MudDialog.Close(DialogResult.Ok(true));

    }
}
