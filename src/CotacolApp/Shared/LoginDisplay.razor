@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@using CotacolApp.Settings
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Microsoft.AspNetCore.Mvc.Routing
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.Extensions.Options
@using CotacolApp.Services.Extensions
@inject ICotacolUserClient CotacolUserClient
@inject IUserProfileManager UserProfile
@inject IOptions<CotacolApiSettings> ApiSettings
@inject IHttpContextAccessor HttpContextAccessor
<AuthorizeView>
    <Authorized>
        @if(uniqueCols>0)
        {
            <span class="iconify" data-icon="ant-design:line-chart-outlined" data-inline="false"></span>
            <span class="lekton">@uniqueCols cols&nbsp;&nbsp;</span>
            <span class="iconify" data-icon="codicon:activate-breakpoints" data-inline="false"></span>
            <span class="lekton">@totalPoints.Number() pts</span>
        }
        <a href="Identity/Account/Manage">
            <img src="@UserProfile.ProfilePicture" width="32" alt="Edit profile"/>
        </a>
        <a href="Identity/Account/Manage/Settings">
            <span class="iconify" data-icon="whh:settingsandroid" data-inline="false" style="color:black" data-width="24px" data-height="24px"></span>
        </a>
        <form method="post" action="Identity/Account/LogOut">
            <button type="submit" class="nav-link btn btn-link">Log out</button>
        </form>
    </Authorized>
    <NotAuthorized>
        <a href="@GetLoginLink()">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private int uniqueCols = -1;
    private int totalPoints = -1;
    
    private string GetLoginLink()
    {
        var redirectUrl = "Identity/Account/Login";
        
        if (!string.IsNullOrEmpty(ApiSettings?.Value?.RedirectDomain))
        {
            if (!HttpContextAccessor.HttpContext.Request.Host.Host
                .Equals(ApiSettings.Value.RedirectDomain, StringComparison.InvariantCultureIgnoreCase))
            {
                redirectUrl = ApiSettings.Value.LoginUrl;
            }
        }
        return redirectUrl;
    }

    protected override async Task OnInitializedAsync()
    {
        if (uniqueCols < 0)
        {
            try
            {
                var stats = await CotacolUserClient.GetAchievementsAsync();
                uniqueCols = stats.UniqueCols;
                totalPoints = stats.TotalScore;
            }
            catch (Exception e)
            {
                Console.WriteLine(e.ToString());
            }
        }   
        await base.OnInitializedAsync();
    }

}