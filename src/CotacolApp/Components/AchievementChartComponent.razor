@using CotacolApp.Models.CotacolApi
@using System.Drawing.Imaging
@using System.IO
@using System.Drawing

@if (ImageContent != null)
{
    <img src=@ImageContent style="width: @(Width)px ; height: @(Height)px"/>
}
else
{
    if (string.IsNullOrEmpty(Error))
    {
        <span>
            <em>Loading chart...</em>
        </span>
    }
    else
    {
        <span>
            <em>@Error</em>
        </span>
    }
}

@code {

    [Parameter]
    public int Width { get; set; } = 600;

    [Parameter]
    public int Height { get; set; } = 300;

    [Parameter]
    public UserAchievements Achievements { get; set; }

    private string ImageContent { get; set; }
    private string Error { get; set; }

    protected override void OnInitialized()
    {
        try
        {
            if (Achievements?.ColResults != null)
            {
                var achievements = Achievements.ColResults.OrderBy(cr => cr.Achievements?.Min(a => a.AchievementDate));
                if (achievements.Any())
                {
                    var days = new List<double>();
                    var points = new List<double>();
                    var currentPoints = 0;
                    foreach (var colResult in achievements)
                    {
                        currentPoints += colResult.CotacolPoints;
                        points.Add(currentPoints);
                        days.Add(colResult.Achievements.Min(a => a.AchievementDate).ToOADate());
                    }

                    var plt = new ScottPlot.Plot(Width, Height);
                    plt.Style(figureBackground: Color.FromArgb(249,241,230));
                    plt.Style(dataBackground: Color.FromArgb(249,241,230));
                    plt.AddScatter(days.ToArray(), points.ToArray(), color: Color.FromArgb(253,125,122));
                    plt.XAxis.TickLabelFormat("MMM\\/yy", dateTimeFormat: true);

                    var imageStream = new MemoryStream();
                    plt.Render(1600, 600).Save(imageStream, ImageFormat.Png);
                    imageStream.Position = 0;

                    ImageContent = $"data:image/png;base64, {Convert.ToBase64String(imageStream.ToArray())}";
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }

}